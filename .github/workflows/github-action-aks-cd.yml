name: Terraform CD - Deploy
on:
  push:
    branches:
      - 'main'

jobs:
    Deploy:
        name: Deploy to Azure
        runs-on: self-hosted
        defaults:
          run:
            working-directory: aks
        
        steps:
          - uses: actions/checkout@v3
            name: Checkout

          - uses: hashicorp/setup-terraform@v3
            with:
              terraform_version: "1.7.2"
          - run: terraform init -backend-config="resource_group_name=$RESOURCE_GROUP" -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="key=$TF_KEY"
            env:
              RESOURCE_GROUP: "${{ secrets.ARM_RESOURCE_GROUP_NAME }}"
              ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
              ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
              ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
              ARM_USE_MSI: true
              STORAGE_ACCOUNT: "${{ secrets.ARM_STORAGE_ACCOUNT_NAME }}"
              CONTAINER_NAME: "${{ secrets.ARM_CONTAINER_NAME }}"
              TF_KEY: "${{ secrets.ARM_TF_KEY }}"
            name: Terrform Init
          - run: terraform plan -out=tfplan -input=false
            env:
              ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
              ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
              ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
              ARM_USE_MSI: true
            name: Terraform plan
            id: plan
          - run: terraform apply -input=false tfplan
            id: apply
            env:
                ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
                ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
                ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
                ARM_USE_MSI: true
